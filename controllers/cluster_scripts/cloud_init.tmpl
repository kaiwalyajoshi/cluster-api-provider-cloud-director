#cloud-config
users:
  - name: root
    lock_passwd: false
write_files:
# Due to a known issue with VMware Guest Customization, cloud-init believes every boot
# is the first boot. This ensures that cloud-init does not remove SSH keys on a reboot.
- path: /etc/cloud/cloud.cfg.d/cse.cfg
  owner: root
  content: |
     ssh_deletekeys: false
# The control_plane.sh script runs on the first control plane machine. The node.sh script
# runs on every subsequent control plane machine, and every worker machine.
- path: /root/ {{- if .ControlPlane -}} control_plane {{- else -}} node {{- end -}} .sh
  owner: root
  content: |
    #!/usr/bin/env bash
    catch() {
      vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_status $?"
      ERROR_MESSAGE="$(date) $(caller): $BASH_COMMAND"
      echo "$ERROR_MESSAGE" &>> /var/log/capvcd/customization/error.log
      vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_failure_reason $ERROR_MESSAGE"

      CLOUD_INIT_OUTPUT=""
      if [[ -f /var/log/cloud-init-output.log ]]
      then
        CLOUD_INIT_OUTPUT=$(</var/log/cloud-init-output.log)
      fi
      vmtoolsd --cmd "info-set guestinfo.post_customization_cloud_init_output $CLOUD_INIT_OUTPUT"
    }
    mkdir -p /var/log/capvcd/customization
    trap 'catch $? $LINENO' ERR EXIT
    set -eEx

    echo "$(date) Post Customization script execution in progress" &>> /var/log/capvcd/customization/status.log {{- if .ControlPlane }}

    VCLOUD_BASIC_AUTH_PATH=/root/vcloud-basic-auth.yaml
    VCLOUD_CONFIGMAP_PATH=/root/vcloud-configmap.yaml
    VCLOUD_CCM_PATH=/root/cloud-director-ccm.yaml
    VCLOUD_CSI_CONFIGMAP_PATH=/root/vcloud-csi-configmap.yaml
    CSI_DRIVER_PATH=/root/csi-driver.yaml
    CSI_CONTROLLER_PATH=/root/csi-controller.yaml
    CSI_NODE_PATH=/root/csi-node.yaml {{- end }}

    vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status in_progress"
    echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.conf
    echo 'net.ipv6.conf.default.disable_ipv6 = 1' >> /etc/sysctl.conf
    echo 'net.ipv6.conf.lo.disable_ipv6 = 1' >> /etc/sysctl.conf
    sudo sysctl -p
    # also remove ipv6 localhost entry from /etc/hosts
    sed -i 's/::1/127.0.0.1/g' /etc/hosts || true
    vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status successful"

    # Our images do not ship the VCD metering service, but CAPVCD requires a successful status to finish bootstrapping.
    vmtoolsd --cmd "info-set guestinfo.metering.status successful"

    vmtoolsd --cmd "info-set {{ if .ControlPlane -}} guestinfo.postcustomization.kubeinit.status {{- else -}} guestinfo.postcustomization.kubeadm.node.join.status {{- end }} in_progress"
    {
{{ .BootstrapRunCmd }}
    }
    if [[ ! -f /run/cluster-api/bootstrap-success.complete ]]
    then
      echo "file /run/cluster-api/bootstrap-success.complete not found" &>> /var/log/capvcd/customization/error.log
      exit 1
    fi
    vmtoolsd --cmd "info-set {{ if .ControlPlane -}} guestinfo.postcustomization.kubeinit.status {{- else -}} guestinfo.postcustomization.kubeadm.node.join.status {{- end }} successful"

    echo "$(date) post customization script execution completed" &>> /var/log/capvcd/customization/status.log
    exit 0
runcmd:
- 'cloud-init clean'
{{ if .ControlPlane }}
- '[ ! -f /root/control_plane.sh ] && sudo reboot'
- '[ ! -f /run/kubeadm/kubeadm.yaml ] && sudo reboot'
- bash /root/control_plane.sh
{{ else }}
- '[ ! -f /root/node.sh ] && sudo reboot'
- '[ ! -f /run/kubeadm/kubeadm-join-config.yaml ] && sudo reboot'
- bash /root/node.sh
{{ end }}
timezone: UTC
disable_root: false
preserve_hostname: false
hostname: "{{ .MachineName }}"
final_message: "The system is ready after $UPTIME seconds"
