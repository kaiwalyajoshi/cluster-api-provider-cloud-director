#cloud-config
write_files:
- path: /root/ {{- if .ControlPlane -}} control_plane {{- else -}} node {{- end -}} .sh
  owner: root
  content: |
    #!/usr/bin/env bash

      # set network status
      vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status in_progress"
      hostname "{{ .MachineName }}"
      echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
      echo "127.0.0.1   localhost" >>/etc/hosts
      echo "{{ .MachineName }}" >/etc/hostname
      echo "127.0.0.1" `hostname` >>/etc/hosts
      vmtoolsd --cmd "info-set guestinfo.postcustomization.networkconfiguration.status successful"

      vmtoolsd --cmd "info-set guestinfo.metering.status in_progress"
      vmtoolsd --cmd "info-set guestinfo.metering.status successful"

      vmtoolsd --cmd "info-set guestinfo.postcustomization.proxy.setting.status in_progress"
      vmtoolsd --cmd "info-set guestinfo.postcustomization.proxy.setting.status successful"

      vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeinit.status in_progress"
      vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeinit.status successful"

      vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeadm.node.join.status in_progress"
      vmtoolsd --cmd "info-set guestinfo.postcustomization.kubeadm.node.join.status successful"

      vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_status 0"

      vmtoolsd --cmd "info-set guestinfo.post_customization_script_execution_failure_reason custom_failure"

      vmtoolsd --cmd "info-set guestinfo.post_customization_cloud_init_output custom_cloud_init_output"
      exit 0
runcmd:
- 'cloud-init clean --logs'
- 'sudo cat /dev/null > /var/log/cloud-init-output.log'
timezone: UTC
disable_root: false
disable_vmware_customization: true
preserve_hostname: false
network:
  config: disabled
manual_cache_clean: True
hostname: "{{ .MachineName }}"
final_message: "The system is ready after $UPTIME seconds"
